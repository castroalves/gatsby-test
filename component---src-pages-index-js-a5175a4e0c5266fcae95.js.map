{"version":3,"sources":["webpack:///./src/components/landing-bio.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Container","Object","styled_base_browser_esm","target","name","styles","OuterContainer","Description","NameHeader","propTypes","siteTitle","PropTypes","string","subtitle","defaultProps","LandingBio","core_browser_esm","gatsby_browser_entry","query","render","data","site","siteMetadata","title","_2039044379","IndexPage","layout","seo","keywords","landing_bio","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","object","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","array","arrayOf","Content","NavLink","Link","GitHubLink","HomeLink","SiteHeader","Header","to","href","GatsbyLink","Footer","Layout","react_default","header","layout_Content","Date","getFullYear","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-a5175a4e0c5266fcae95.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nconst Container = styled.div`\n  text-align: center;\n`\n\nconst OuterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  height: 78vh;\n`\n\nconst Description = styled.p`\n  padding: 0;\n  margin-bottom: 1rem;\n  font-size: 1.4rem;\n`\n\nconst NameHeader = styled.h1`\n  font-size: 3.5rem;\n  margin-bottom: 0;\n`\n\nconst LandingBio = () => (\n  <StaticQuery\n    query={graphql`\n      query LandingSiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            subtitle\n          }\n        }\n      }\n    `}\n    render={data => (\n      <OuterContainer>\n        <Container>\n          <NameHeader>{data.site.siteMetadata.title}</NameHeader>\n          <Description>{data.site.siteMetadata.subtitle}</Description>\n        </Container>\n      </OuterContainer>\n    )}\n  />\n)\n\nNameHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  subtitle: PropTypes.string,\n}\n\nNameHeader.defaultProps = {\n  siteTitle: ``,\n  subtitle: ``,\n}\n\nexport default LandingBio\n","import React from \"react\"\n\nimport LandingBio from \"../components/landing-bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <LandingBio />\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Content = styled.div`\n  max-width: 860px;\n  padding: 1rem 1.0875rem;\n  font-size: 1.2rem;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst GitHubLink = styled.a`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst HomeLink = styled(NavLink)`\n  margin-left: 0;\n`\n\nconst SiteHeader = styled.header`\n  background: transparent;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n`\n\nconst Header = ({ siteTitle }) => (\n  <SiteHeader>\n    <Content>\n      <p>\n        <HomeLink to=\"/\">{siteTitle}</HomeLink>\n        <NavLink to=\"/blog\">Blog</NavLink>\n        <GitHubLink href=\"https://github.com/niklasmtj/gatsby-starter-julia\">\n          GitHub\n        </GitHubLink>\n      </p>\n    </Content>\n  </SiteHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 0 1.0875rem 1rem;\n  padding-top: 0;\n`\n\nconst GatsbyLink = styled.a`\n  margin-left: 5px;\n`\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: center;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Content>\n          <main>{children}</main>\n          <Footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <GatsbyLink href=\"https://www.gatsbyjs.org\">Gatsby</GatsbyLink>\n          </Footer>\n        </Content>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}